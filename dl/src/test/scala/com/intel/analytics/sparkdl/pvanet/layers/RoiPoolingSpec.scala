package com.intel.analytics.sparkdl.pvanet.layers

import com.intel.analytics.sparkdl.tensor.{Storage, Tensor}
import com.intel.analytics.sparkdl.utils.Table
import org.scalatest.{FlatSpec, Matchers}

class RoiPoolingSpec extends FlatSpec with Matchers {

  val data = Array(-11.026353375362704767, -4.9521045020134026871, -2.0875288175866684171, -10.230080207396827774, 
    -20.419221489259836488, 5.0514822329373023635, 27.103295384291051562, -13.609532850566449014, -2.4476935664168868456, 8.7622568044088353645, 9.2400437517737330495, -8.9467932700322343464, 0.19389262204025431435, -1.4279502784690225603, -14.116278732490307846, 10.718532946352940627, 10.368090629470254171, 10.512855875493139379, -9.251061624904954428, -8.8843051274378108673, -5.5413726179030939889, 13.990674914927200945, 2.627416737758108578, -3.095276870266837399, -3.9762671765247188382, 0.42302317776601483512, -6.2692355891015907332, -6.7161252418567709555, 0.48483821323607212417, -22.446594335235431572, 7.7017667486453547099, -8.3335386440177590117, -19.04551871435455368, 5.7364107047116430493, -13.974017741240441381, 18.148403822404365116, -0.74223319663350295627, -10.101350051772406857, -15.776156505977265709, 5.7096865848824247536, 1.9366316191252550549, -2.4187736819282674716, 17.095950698398262091, -20.590480603666975412, -5.4312929374458738252, 20.009042245528860349, 17.500137761443269824, 7.2414753313708608573, 14.259640866680342697, 0.11226500043586817856, -8.410263527268321937, 14.216027202634645477, -7.4758647474322366122, -16.590940394532587732, 0.85425622358009700719, 6.2663234730658770033, 9.7114961526097793865, -5.1480216966668166378, -29.247975927191941281, 0.54405758495271605568, 13.206158703055720594, 18.824555618998385143, 9.9610191913663168606, -10.233856839775484104, -0.44230362571893772072, -4.4496035510124496426, -7.0316300760520897839, -15.432079234268524459, 0.19240114105783212572, 8.2335092598548538234, 15.630010079879529172, -0.72580283667882106169, 4.5538220911411730896, -9.2202839134397702736, -22.542600545560699032, -0.3752656103348525618, 3.4331990647630354907, -11.419560876475724598, -20.264309542505159811, -4.1184095775415165974, -12.183551851680432421, -13.435779762784354929, -0.7428463429403858731, -2.254668094549825863, -2.818993765133796181, -2.4266239453447986385, -2.7063174474155227145, 13.021359796505800333, -6.7783174966351484869, 6.2286572897310108488, -7.22639764054935263, 25.019595708432071035, 10.486862426573678064, 3.4870543081070359825, 13.015281404856068548, 10.15351931524788931, 2.0992214806869844423, 2.0873536448781719876, -3.6362918821079244225, 8.0078613907841607045, 5.5409222576833530027, 3.6986631019485045613, -15.147309243724652816, -16.665901457827633436, -1.9004330211996955935, 12.024303472863843822, 13.345005529435763236, -0.98900328116835489745, -18.162041285220290376, 8.440782290081594752, 1.9208949054138346746, 1.1647269355273506264, 0.26363057271201850718, 12.763133850380807388, -8.9074382773669888991, 4.3825272089018367794, 18.722948373054094873, -0.98400153423241065731, 8.329128498806955605, -18.819597217022273838, 11.751256453639802757, 4.1308423229329092052, 0.058698765976096356489, 11.790509683917907324, -2.3496252171543692278, -16.12150943102357914, -24.227683073356089949, -8.0435510290549423473, -10.201958165279133794, -0.014555940885168879018, -24.894931588208649487, 11.5352969560713845, 4.9025732600608504796, 16.890333312657034526, -10.222506920110829398, 3.5478769453958163282, -4.4007217207932338709, -10.566974328564850083, 9.6763382950224485768, 0.17969135326701979327, 5.6205423846701139112, -6.0008294775695993906, -4.9649628102748382119, -8.2218441017735361953, -15.443917219552476539, -3.6282808293314197101, 0.77428207006510973986, 5.4031006612177634452, 8.5803836578879302266, -5.4794542471448224319, -0.80128841521929428104, -13.422330168823064511, -1.5912268545105234807, 1.7842688898060909963, -9.9585914922887006639, -5.4519972332619772715, -10.678424686741347926, -2.6846959467986564185, -2.6848132100464328076, -2.1185476593858592054, -21.346968649756526304, -3.7038331650243119242, -4.9664570746542544555, -8.2492035038863900098, 1.5204027676085405396, 3.7311440277560832257, 1.9846982832455630774, 14.269725948988696729, -0.20354107233311885539, 0.84007522642301868387, -13.714795108936471024, 9.7700882550571943597, 10.062149610623873031, 1.5773677136115593633, 8.4122383269216616242, -14.920284967075573945, -4.7090047893539264123, 5.9727744074323059209, 5.3543528462495153519, -0.2037976112763495995, -14.625186343416231693, -2.3351784079540220951, -4.3805582876228541522, 9.3462336445560261211, 1.6156604894583894705, 0.57024300039047948196, -4.9147836667353708151, 3.7277253956380613786, 2.0469216792167519436, 10.07082762479279836, 0.23214910113853373663, -11.357231863856860343)
  val rois = Array(0, 0, 0, 7, 5, 1, 6, 2, 7, 5, 1, 3, 1, 6, 4, 0, 3, 3, 3, 3)
  val input = new Table
  input.insert(Tensor(Storage(data.map(x => x.toFloat))).resize(2, 2, 6, 8))
  input.insert(Tensor(Storage(rois.map(x => x.toFloat))).resize(4, 5))

  val roiPooling = new RoiPooling[Float](2, 3, 1)

  "updateOutput" should "work properly" in {
    val res = roiPooling.forward(input)
    println(res.storage().array().mkString(","))
    
    val expectedRes = Array(10.512855875493139379, 13.990674914927200945, 27.103295384291051562, 17.095950698398262091, 20.009042245528860349, 20.009042245528860349, 14.259640866680342697, 18.824555618998385143, 18.824555618998385143, 6.2286572897310108488, 25.019595708432071035, 13.021359796505800333, 8.329128498806955605, 8.329128498806955605, -8.0435510290549423473, -4.9649628102748382119, 3.5478769453958163282, 3.5478769453958163282, 8.4122383269216616242, 14.269725948988696729, 14.269725948988696729, 0.23214910113853373663, 9.3462336445560261211, 9.3462336445560261211, 18.722948373054094873, 18.722948373054094873, 8.440782290081594752, 11.790509683917907324, 16.890333312657034526, 16.890333312657034526, 1.5204027676085405396, 3.7311440277560832257, 3.7311440277560832257, 10.062149610623873031, 10.062149610623873031, 8.4122383269216616242, -6.7161252418567709555, -6.7161252418567709555, -6.7161252418567709555, -6.7161252418567709555, -6.7161252418567709555, -6.7161252418567709555, -0.3752656103348525618, -0.3752656103348525618, -0.3752656103348525618, -0.3752656103348525618, -0.3752656103348525618, -0.3752656103348525618)
  }

}
